# Generated by Powerlevel10k configuration wizard on 2024-01-01 at 00:00 UTC.
# Type `p10k configure` to edit this file.
#
# Tip: Looking for a nice color? Here's a one-liner to print the 256 colors:
#   for i in {0..255}; do print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'}; done

# Temporarily change options.
'builtin' 'local' '-a' 'p10k_config_opts'
[[ ! -o 'aliases'         ]] || p10k_config_opts+=('aliases')
[[ ! -o 'sh_glob'         ]] || p10k_config_opts+=('sh_glob')
[[ ! -o 'no_brace_expand' ]] || p10k_config_opts+=('no_brace_expand')
'builtin' 'setopt' 'no_aliases' 'no_sh_glob' 'brace_expand'

() {
  emulate -L zsh -o extended_glob

  # Unset all configuration options. This allows you to apply configuration changes without
  # restarting zsh. Edit ~/.p10k.zsh and type `source ~/.p10k.zsh`.
  unset -m '(POWERLEVEL9K_*|DEFAULT_USER)~POWERLEVEL9K_GITSTATUS_DIR'

  # Zsh >= 5.1 is required.
  autoload -Uz is-at-least && is-at-least 5.1 || return

  # The list of segments shown on the left. Fill it with the most important segments.
  typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
    # =========================[ Line #1 ]=========================
    os_icon                 # os identifier
    dir                     # current directory
    vcs                     # git status
    # =========================[ Line #2 ]=========================
    newline                 # \n
    prompt_char            # prompt symbol
  )

  # The list of segments shown on the right. Fill it with less important segments.
  # Tip: Remove the @ symbol from the right prompt to get rid of the hostname.
  typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
    # =========================[ Line #1 ]=========================
    status                  # exit code of the last command
    command_execution_time  # duration of the last command
    background_jobs         # presence of background jobs
    direnv                  # direnv status (https://direnv.net/)
    virtualenv              # python virtual environment (https://docs.python.org/3/library/venv.html)
    nodeenv                 # node.js version from nodeenv (https://github.com/ekalinin/nodeenv)
    nodenv                  # node.js version from nodenv (https://github.com/nodenv/nodenv)
    nvm                     # node.js version from nvm (https://github.com/nvm-sh/nvm)
    node_version           # node.js version
    go_version             # go version (https://golang.org)
    rust_version           # rustc version (https://www.rust-lang.org)
    dotnet_version         # .NET version (https://dotnet.microsoft.com)
    php_version            # php version (https://www.php.net/)
    laravel_version        # laravel php framework version (https://laravel.com/)
    java_version           # java version (https://www.java.com/)
    package                # name@version from package.json (https://docs.npmjs.com/files/package.json)
    rbenv                  # ruby version from rbenv (https://github.com/rbenv/rbenv)
    rvm                    # ruby version from rvm (https://rvm.io)
    fvm                    # flutter version management (https://github.com/leoafarias/fvm)
    luaenv                 # lua version from luaenv (https://github.com/cehoffman/luaenv)
    jenv                   # java version from jenv (https://github.com/jenv/jenv)
    plenv                  # perl version from plenv (https://github.com/tokuhirom/plenv)
    kubecontext            # current kubernetes context (https://kubernetes.io/)
    terraform              # terraform workspace (https://www.terraform.io)
    aws                    # aws profile (https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html)
    aws_eb_env            # aws elastic beanstalk environment (https://aws.amazon.com/elasticbeanstalk/)
    azure                  # azure account name (https://docs.microsoft.com/en-us/cli/azure)
    gcloud                 # google cloud cli acccount and project (https://cloud.google.com/)
    google_app_cred       # google application credentials (https://cloud.google.com/docs/authentication/application-default-credentials)
    context                # user@hostname
    nordvpn                # nordvpn connection status, linux only (https://nordvpn.com/)
    ranger                 # ranger shell (https://github.com/ranger/ranger)
    nnn                    # nnn shell (https://github.com/jarun/nnn)
    lf                     # lf shell (https://github.com/gokcehan/lf)
    xplr                   # xplr shell (https://github.com/sayanarijit/xplr)
    vim_shell             # vim shell indicator (:sh)
    midnight_commander    # midnight commander shell (https://midnight-commander.org/)
    nix_shell             # nix shell (https://nixos.org/nixos/nix-pills/developing-with-nix-shell.html)
    # =========================[ Line #2 ]=========================
    newline               # \n
    # Put the last symbol of the prompt here to wrap the prompt.
    # This is the default value. You can remove it entirely.
    prompt_char
  )

  # Defines character set used by powerlevel10k. It's best to let `p10k configure` set it for you.
  typeset -g POWERLEVEL9K_MODE=nerdfont-complete
  # When set to `moderate`, some icons will have an extra space after them. This is meant to avoid
  # icon overlap when using non-monospace fonts. When set to `none`, spaces are not added.
  typeset -g POWERLEVEL9K_ICON_PADDING=moderate

  # Basic style options that define the overall prompt look.
  typeset -g POWERLEVEL9K_BACKGROUND=                            # transparent background
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX='%F{blue}╭─'
  typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX='%F{blue}╰─%F{red}❯%f '
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_SUFFIX='%F{blue}─╮'
  typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_SUFFIX='%F{blue}─╯'

  # Add an empty line before each prompt.
  typeset -g POWERLEVEL9K_PROMPT_ADD_NEWLINE=true

  # Ruler, a.k.a. the horizontal line before each prompt.
  typeset -g POWERLEVEL9K_SHOW_RULER=false
  typeset -g POWERLEVEL9K_RULER_CHAR='─'        # reasonable alternative: '·'
  typeset -g POWERLEVEL9K_RULER_FOREGROUND=240

  # Filler between left and right prompt on the first prompt line (characters above
  # the ruler). ' ' means no filler. Use ' ' to align left and right prompt.
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_CHAR=' '
  if [[ $POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_CHAR != ' ' ]]; then
    # The color of the filler.
    typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_FOREGROUND=240
    # Add a space after the filler, or the filler will be displayed as a dot.
    typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_BACKGROUND=
    typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS+=(context)
    typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()
    typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_SUFFIX=' '
  fi

  # Transient prompt works similarly to the builtin transient_rprompt option. It trims down prompt
  # when accepting a command line. Supported values:
  #
  #   - off:      Don't change the prompt when accepting a command line.
  #   - always:   Trim down prompt when accepting a command line.
  #   - same-dir: Trim down prompt when accepting a command line unless this is the first
  #               command typed in this directory (like in `cd /some/path`).
  typeset -g POWERLEVEL9K_TRANSIENT_PROMPT=off

  # Instant prompt mode.
  #
  #   - off:     Disable instant prompt. Choose this if you've trouble with instant prompt,
  #              or if you want to see 100% accurate output in your prompt (for example,
  #              the current value of PROMPT or RPROMPT). Note that instant prompt and
  #              dynamic prompt are mutually exclusive. This option is on by default for
  #              backward compatibility, but it's actually recommended to use 'quiet' instead.
  #   - quiet:   Enable instant prompt and don't print warnings when detecting console output
  #              during zsh initialization. Choose this if you want instant prompt and never
  #              see the console output. You can also run `p10k configure` and choose
  #              "Quiet" to set this option.
  #   - verbose: Enable instant prompt and print a warning when detecting console output during
  #              zsh initialization. Choose this if you've never seen any console output
  #              and you want to keep it that way. You can also run `p10k configure` and
  #              choose "Verbose" to set this option.
  typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet

  # Hot reload allows you to change POWERLEVEL9K options after Powerlevel10k has been initialized.
  # For example, you can type `POWERLEVEL9K_BACKGROUND=red` in your terminal and Powerlevel10k
  # will reload the prompt with the new background color. Note that this can cause artifacts,
  # so it should be used carefully.
  typeset -g POWERLEVEL9K_DISABLE_HOT_RELOAD=true

  # If p10k is already loaded, reload configuration.
  # This works even with POWERLEVEL9K_DISABLE_HOT_RELOAD=true.
  (( ! $+functions[p10k] )) || p10k reload
}

# Tell `p10k configure` which file it should overwrite.
typeset -g POWERLEVEL9K_CONFIG_FILE=${${(%):-%x}:a}

(( ${#p10k_config_opts} )) && setopt ${p10k_config_opts[@]}
'builtin' 'unset' 'p10k_config_opts' 